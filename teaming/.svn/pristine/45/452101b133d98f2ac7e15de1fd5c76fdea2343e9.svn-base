package com.moim.web;

import javax.inject.Inject;
import javax.servlet.http.HttpServletRequest;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import com.moim.exception.BizNotEffectedException;
import com.moim.exception.BizNotFoundException;
import com.moim.service.IMoimScheduleService;
import com.moim.service.IMoimService;
import com.moim.vo.MoimScheduleVO;
import com.moim.vo.MoimVO;

/**
 * <b> 모임 일정 등록을 위한 컨트롤러 <b>
 * 
 * @author DNA
 * @since 2021.07.28
 */
@Controller
@RequestMapping("/schedule")
public class ScheduleController {
	private Logger logger = LoggerFactory.getLogger(this.getClass());

	@Inject
	IMoimScheduleService moimScheduleService;

	@Inject
	IMoimService moimService;

	@RequestMapping("/scheduleForm")
	public String scheduleForm(@ModelAttribute("moimSchedule") MoimScheduleVO moimSchedule, Model model) {

		logger.debug("MoimScheduleVO={}", moimSchedule);

		return "/schedule/scheduleForm";
	}

	@RequestMapping("/scheduleRegist")
	public String scheduleRegist(@ModelAttribute("moimSchedule") MoimScheduleVO moimSchedule, BindingResult erros,
			Model model, @ModelAttribute("moim") MoimVO moim, HttpServletRequest request) throws BizNotFoundException, BizNotEffectedException {

		logger.debug("MoimScheduleVO={}", moimSchedule);
		System.out.println(request.getParameter("mScheduleModDate"));  	
		//TODO: 벨리데이션 추가
		// new ManagerNoticeValidator().validate(ManagerNotice, erros);

		if (erros.hasErrors()) { // 에러가 있으면
			return "/schedule/scheduleForm";
		}
		moimScheduleService.registSchedule(moimSchedule);
		
		String parantClose = "1";
		
		//TODO: 주소는 생각해보기
		return "redirect:/moim/moimView?moimCode=" + moim.getMoimCode();
	}

	@RequestMapping("scheduleEdit")
	public String scheduleEdit(@RequestParam("mScheduleNo") int mScheduleNo, Model model) {

		try {
			MoimScheduleVO moimSchedule = moimScheduleService.getSchedule(mScheduleNo);
			model.addAttribute("moimSchedule", moimSchedule);
		} catch (BizNotFoundException e) {
			e.printStackTrace();
		}

		return "/schedule/scheduleEdit";
	}

	@PostMapping("/scheduleModify")
	public String scheduleModify(@ModelAttribute("moimSchedule") MoimScheduleVO moimSchedule, BindingResult erros,
			Model model, @ModelAttribute("moim") MoimVO moim) throws BizNotFoundException, BizNotEffectedException {

		logger.debug("MoimScheduleVO={}", moimSchedule);

		//TODO:벨리데이션 추가
		// new ManagerNoticeValidator().validate(ManagerNotice, erros);

		if (erros.hasErrors()) { // 에러가 있으면
			return "/schedule/scheduleForm";
		}
		moimScheduleService.modifySchedule(moimSchedule);

		// 주소는 목록으로 돌아가야겠지...
		return "/schedule/scheduleModify";
	}

	@RequestMapping("/scheduleDelete")
	public String scheduleDelete(@ModelAttribute("moimSchedule") MoimScheduleVO moimSchedule, BindingResult erros,
			Model model, @ModelAttribute("moim") MoimVO moim) throws BizNotFoundException, BizNotEffectedException {

		logger.debug("MoimScheduleVO={}", moimSchedule);

		if (erros.hasErrors()) { // 에러가 있으면
			return "/schedule/scheduleForm";
		}
		try {
			moimScheduleService.removeSchedule(moimSchedule);
		} catch (BizNotEffectedException | BizNotFoundException e) {
			e.printStackTrace();
		}
		// 주소는 목록으로 돌아가야겠지...
		return "/schedule/scheduleModify";
	}

	//TODO : 리스트가 필요 없나 뷰가 필요없나 
	public String scheduleView(@RequestParam("mScheduleNo") int mScheduleNo, Model model) {
	
		logger.debug("mScheduleNo={}", mScheduleNo);
		
		try {
			
			//TODO: increaseEnter, decreaseEnter 수정 가능성 있음
			
			moimScheduleService.increaseEnter(mScheduleNo);	// 인원 증가
			moimScheduleService.decreaseEnter(mScheduleNo);	// 인원 감소
			
			MoimScheduleVO moimSchedule = moimScheduleService.getSchedule(mScheduleNo);
			model.addAttribute("moimSchedule", moimSchedule);
			
		} catch (BizNotFoundException | BizNotEffectedException e) {
			e.printStackTrace();
		}
		return "/schedule/scheduleView";
	}

}
